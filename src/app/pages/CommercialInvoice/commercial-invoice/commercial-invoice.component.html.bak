<p-growl [(value)]="msgs"></p-growl>
<p-confirmDialog></p-confirmDialog>
<form #invoicef="ngForm">
  <div class="row">
    <div class="col-lg-6">
      <label for="txtInvoiceNo">Invoice No</label>
      <div class="input-group">
        <input type="text" class="form-control" style="color: black!important" class="form-control" id="txtInvoiceNo" name="txtInvoiceNo"
          ngModel #txtInvoiceNo='ngModel' [(ngModel)]="invoice.InvoiceNo">
      </div>
    </div>
    <div class="col-lg-6">
      <label for="InvoiceDate">Invoice Date</label>
      <div class="input-group">
        <input type="date" (change)="validateOrderForm()" class="form-control" [(ngModel)]="invoice.InvoiceDate" id="InvoiceDate"
          name="InvoiceDate" ngModel #InvoiceDate='ngModel' required dateFormat="yy-mm-dd">
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6">
      <label for="txtShipper">Shipper</label>
      <div class="input-group">
        <input type="text" class="form-control" style="color: black!important" disabled="true" id="txtShipper" name="txtShipper"
          ngModel #txtShipper='ngModel' [(ngModel)]="invoice.Shipper.Name" placeholder="Select Shipper">
        <app-shippers on-selectedRowListener="selectShipper($event)"></app-shippers>
      </div>
    </div>
    <div class="col-lg-6">
      <label for="txtPriority">Priority</label>
      <div class="input-group">
        <input type="text" class="form-control" style="color: black!important" disabled="true" id="txtPriority" name="txtPriority"
          ngModel #txtPriority='ngModel' [(ngModel)]="invoice.Priority.Name" placeholder="Select Priority">
        <app-priorities on-selectedRowListener="selectPriority($event)"></app-priorities>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6">
      <label for="txtVendor">Vendor</label>
      <div class="input-group">
        <input type="text" class="form-control" style="color: black!important" disabled="true" id="txtVendor" name="txtVendor" ngModel
          #txtVendor='ngModel' [(ngModel)]="invoice.VendorStr" placeholder="Select Vendor">
        <app-vendors on-selectedRowListener="selectVendor($event)"></app-vendors>
      </div>
    </div>
    <div class="col-lg-6">
      <label for="txtOriginCountry">Origin Country</label>
      <div class="input-group">
        <input type="text" class="form-control" style="color: black!important" disabled="true" id="txtOriginCountry" name="txtOriginCountry"
          ngModel #txtOriginCountry='ngModel' [(ngModel)]="invoice.OriginCountry.Name" placeholder="Select Origin Country">
        <app-countries on-selectedRowListener="selectOriginCountry($event)"></app-countries>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6">
      <label for="txtPortofLoading">Port Of Loading</label>
      <div class="input-group">
        <input type="text" class="form-control" style="color: black!important" disabled="true" id="txtPortofLoading" name="txtPortofLoading"
          ngModel #txtPortofLoading='ngModel' [(ngModel)]="invoice.PortofLoading.Name" placeholder="Select Port Of Loading">
        <app-portofLoadings on-selectedRowListener="selectPortofLoading($event)"></app-portofLoadings>
      </div>
    </div>
    <div class="col-lg-6">
      <label for="txtFinalDestination">Final Destination</label>
      <div class="input-group">
        <input type="text" class="form-control" style="color: black!important" disabled="true" id="txtFinalDestination" name="txtFinalDestination"
          ngModel #txtFinalDestination='ngModel' [(ngModel)]="invoice.FinalDestination.Name" placeholder="Select Final Destination">
        <app-finalDestinations on-selectedRowListener="selectFinalDestination($event)"></app-finalDestinations>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6">
      <label for="txtPaymentTerm">Payment Term</label>
      <div class="input-group">
        <input type="text" class="form-control" style="color: black!important" disabled="true" id="txtPaymentTerm" name="txtPaymentTerm"
          ngModel #txtPaymentTerm='ngModel' [(ngModel)]="invoice.PaymentTerm.Name" placeholder="Select Payment Term">
        <app-paymentTerms on-selectedRowListener="selectPaymentTerm($event)"></app-paymentTerms>
      </div>
    </div>
    <div class="col-lg-6">
      <label for="ArrivalDate">Arrival Date</label>
      <div class="input-group">
        <input type="date" class="form-control" (change)="validateOrderForm()" [(ngModel)]="invoice.ArrivalDate" id="ArrivalDate"
          name="ArrivalDate" ngModel #ArrivalDate='ngModel' required>
      </div>
    </div>
  </div>
  <!--div class="row">
    <div class="col-lg-6">
      <label for="DateofFinanace">Date Of Finanace</label>
      <div class="input-group">
        <input type="date" class="form-control" [(ngModel)]="invoice.DateofFinanace" id="DateofFinanace" name="DateofFinanace"
          ngModel #DateofFinanace='ngModel' required>
      </div>
    </div>
    <div class="col-lg-6">
      <label for="txtPaymentTerm">Payment Status</label>
      <div class="input-group">

      </div>
    </div>
  </div -->

  <br/>
  <div class="ui-grid-row">
    <div class="ui-grid-col-2 label">PO :
      <app-purchaseOrders on-selectedRowListener="selectItems($event)"></app-purchaseOrders>
    </div>
    <div class="ui-grid-col-2"></div>
  </div>
  <p-dataTable #dt [value]="invoice.Items" expandableRows="true" [rows]="5" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[5,10,15,20]">
    <p-header>
      <button (click)="filterClicked()" pButton icon="fa-filter"></button>
    </p-header>
    <p-column expander="true" styleClass="col-icon"></p-column>
    <p-column field="OrderNo" header="PO Number" [sortable]="true" [filter]="isFilter" filterMatchMode="contains"></p-column>
    <p-column field="StyleNumber" header="Style Number" [sortable]="true" [filter]="isFilter" filterMatchMode="contains"></p-column>
    <p-column field="ItemName" header="Item Name" [sortable]="true" [filter]="isFilter" filterMatchMode="contains"></p-column>
    <p-column field="Quantity" header="Total Quantity" [sortable]="true" [filter]="isFilter" filterMatchMode="contains"></p-column>
    <p-column field="FXPrice" header="Unit Price" [sortable]="true" [filter]="isFilter" filterMatchMode="contains"></p-column>
    <p-column field="FXAmount" header="FX Amount" [sortable]="true" [filter]="isFilter" filterMatchMode="contains"></p-column>
    <p-column field="Currency.CurrencyName" header="Currency" [sortable]="true" [filter]="isFilter" filterMatchMode="contains"></p-column>
    <p-column styleClass="col-button">
      <ng-template pTemplate="header">

      </ng-template>
      <ng-template let-item="rowData" pTemplate="body">
        <button type="button" pButton (click)="preUpdateItem(item)" icon="fa-edit"></button>
        <button type="button" pButton (click)="deleteItem(item)" icon="fa-trash"></button>
      </ng-template>
    </p-column>
    <ng-template let-item pTemplate="rowexpansion">
      <div class="ui-grid ui-grid-responsive ui-fluid" style="font-size:16px;padding:20px">
        <div class="ui-grid-row">
          <div class="ui-grid-col-9">
            <div class="ui-grid ui-grid-responsive ui-grid-pad">
              <div class="ui-grid-row">
                <div class="ui-grid-col-3 label">PO Number: </div>
                <div class="ui-grid-col-4">{{item.OrderNo}}</div>
                <div class="ui-grid-col-3 label">Style Number: </div>
                <div class="ui-grid-col-4">{{item.StyleNumber}}</div>
              </div>
              <div class="ui-grid-row">
                <div class="ui-grid-col-3 label">Item Name: </div>
                <div class="ui-grid-col-4">{{item.ItemName}}</div>
                <div class="ui-grid-col-3 label">Total Quantity: </div>
                <div class="ui-grid-col-4">{{item.Quantity}}</div>
              </div>
              <div class="ui-grid-row">
                <div class="ui-grid-col-3 label">Unit Price: </div>
                <div class="ui-grid-col-4">{{item.FXPrice}}</div>
                <div class="ui-grid-col-3 label">Total Amount: </div>
                <div class="ui-grid-col-4">{{item.FXAmount}}</div>
              </div>
              <div class="ui-grid-row">
                <div class="ui-grid-col-3 label">Currency: </div>
                <div class="ui-grid-col-4">{{item.Currency.CurrencyName}}</div>
                <div class="ui-grid-col-3 label">HTS Number: </div>
                <div class="ui-grid-col-4">{{item.HTSNumber}}</div>
              </div>
              <div class="ui-grid-row">
                <div class="ui-grid-col-3 label">Number Of Cartons: </div>
                <div class="ui-grid-col-4">{{item.NumberOfCartons}}</div>
                <div class="ui-grid-col-3 label">CBM: </div>
                <div class="ui-grid-col-4">{{item.CBM}}</div>
              </div>
              <div class="ui-grid-row">
                <div class="ui-grid-col-3 label">GW: </div>
                <div class="ui-grid-col-4">{{item.GW}}</div>
                <div class="ui-grid-col-3 label">NW: </div>
                <div class="ui-grid-col-4">{{item.NW}}</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </ng-template>
    <p-footer>
      <div class="ui-helper-clearfix" style="width:100%">
        <button type="button" pButton icon="fa-file-o" iconPos="left" label="Export Data" (click)="dt.exportCSV()" style="float:right"></button>
      </div>
    </p-footer>
  </p-dataTable>
  <div class="row">
    <div class="col-lg-6">
      <br/>
      <button type="button" class="btn btn-primary" [disabled]="!canSubmitInvoiceForm" (click)="onSubmit()">Save</button>
    </div>
  </div>
</form>
<p-dialog [modal]="_modal" [(visible)]="_display" [width]="_width" [responsive]="true">

  <p-header>Add or edit item</p-header>
  <form #itemf="ngForm">

    <div class="row">
      <div class="col-lg-6">
        <label for="txtOrderNo">PO Number</label>
        <div class="input-group">
          <input type="text" class="form-control" disabled="true" style="color: black!important" id="txtOrderNo" name="txtOrderNo"
            ngModel #txtOrderNo='ngModel' [(ngModel)]="item.OrderNo">
        </div>
      </div>
      <div class="col-lg-6">
        <label for="txtStyleNumber">Style Number</label>
        <div class="input-group">
          <input type="text" (change)="validateItemForm()" class="form-control" style="color: black!important" id="txtStyleNumber"
            name="txtStyleNumber" ngModel #txtStyleNumber='ngModel' [(ngModel)]="item.StyleNumber" required placeholder="Enter Style Number">
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-6">
        <label for="txtItemName">Item Name</label>
        <div class="input-group">
          <input type="text" (change)="validateItemForm()" class="form-control" style="color: black!important" id="txtItemName" name="txtItemName"
            ngModel #txtItemName='ngModel' [(ngModel)]="item.ItemName" required placeholder="Enter Item Name">
        </div>
      </div>
      <div class="col-lg-6">
        <label for="txtTotalQuantity">Total Quantity</label>
        <div class="input-group">
          <input type="text" (change)="calculateAmount()" class="form-control" style="color: black!important" id="txtTotalQuantity"
            name="txtTotalQuantity" ngModel #txtTotalQuantity='ngModel' [(ngModel)]="item.Quantity" required placeholder="Enter Total Quantity">
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6">
        <label for="txtUnitPrice">Unit Price</label>
        <div class="input-group">
          <input type="text" (change)="calculateAmount()" class="form-control" style="color: black!important" id="txtUnitPrice" name="txtUnitPrice"
            ngModel #txtUnitPrice='ngModel' [(ngModel)]="item.FXPrice" required placeholder="Enter Unit Price">
        </div>
      </div>
      <div class="col-lg-6">
        <label for="txtFXPrice">Total Amount</label>
        <div class="input-group">
          <input type="text" class="form-control" disabled="true" style="color: black!important" id="txtFXPrice" name="txtFXPrice"
            ngModel #txtFXPrice='ngModel' [(ngModel)]="item.FXAmount" required>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6">
        <label for="txtCurrencyName">Currency</label>
        <div class="input-group">
          <input type="text" class="form-control" style="color: black!important" disabled="true" id="txtCurrencyName" name="txtCurrencyName"
            ngModel #txtCurrencyName='ngModel' [value]="item.Currency.CurrencyName" placeholder="Select Currency">
          <app-currencies on-selectedRowListener="selectCurrency($event)"></app-currencies>
        </div>
      </div>
      <div class="col-lg-6">
        <label for="txtHTSNumber">HTS Number</label>
        <div class="input-group">
          <input type="text" (change)="validateItemForm()" class="form-control" style="color: black!important" id="txtHTSNumber" name="txtHTSNumber"
            ngModel #txtHTSNumber='ngModel' [(ngModel)]="item.HTSNumber" required placeholder="Enter Barcode">
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6">
        <label for="txtNumberOfCartons">Number Of Cartons</label>
        <div class="input-group">
          <input type="text" (change)="validateItemForm()" class="form-control" style="color: black!important" id="txtNumberOfCartons"
            name="txtNumberOfCartons" ngModel #txtNumberOfCartons='ngModel' [(ngModel)]="item.NumberOfCartons" required placeholder="Enter Number Of Cartons">
        </div>
      </div>
      <div class="col-lg-6">
        <label for="txtCBM">CBM</label>
        <div class="input-group">
          <input type="text" (change)="validateItemForm()" class="form-control" style="color: black!important" id="txtCBM" name="txtCBM"
            ngModel #txtCBM='ngModel' [(ngModel)]="item.CBM" required placeholder="Enter CBM">
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6">
        <label for="txtGW">GW</label>
        <div class="input-group">
          <input type="text" (change)="validateItemForm()" class="form-control" style="color: black!important" id="txtGW" name="txtGW"
            ngModel #txtGW='ngModel' [(ngModel)]="item.GW" required placeholder="Enter GW">
        </div>
      </div>
      <div class="col-lg-6">
        <label for="txtNW">NW</label>
        <div class="input-group">
          <input type="text" (change)="validateItemForm()" class="form-control" style="color: black!important" id="txtNW" name="txtNW"
            ngModel #txtNW='ngModel' [(ngModel)]="item.NW" required placeholder="Enter NW">
        </div>
      </div>
    </div>

    <p-footer>
      <button type="button" [disabled]="!canSubmitItemForm" class="btn btn-primary" (click)="onSubmitItem()">Save</button>
      <button type="button" (click)="onCancel()" class="btn btn-second">Cancel</button>
    </p-footer>

  </form>

</p-dialog>
